### Install ARGO cd

kubectl create namespace argocd
kubectl apply -n argocd -f https://raw.githubusercontent.com/argoproj/argo-cd/stable/manifests/install.yaml

### ARGO CLI
VERSION=$(curl --silent "https://api.github.com/repos/argoproj/argo-cd/releases/latest" | grep '"tag_name"' | sed -E 's/.*"([^"]+)".*/\1/')
curl -sSL -o /usr/local/bin/argocd https://github.com/argoproj/argo-cd/releases/download/$VERSION/argocd-linux-amd64
chmod +x /usr/local/bin/argocd


kubectl patch svc argocd-server -n argocd -p '{"spec": {"type": "NodePort"}}' && kubectl get svc argocd-server -n argocd

kubectl port-forward svc/argocd-server -n argocd 8080:443 
kubectl get pods -n argocd -l app.kubernetes.io/name=argocd-server -o name | cut -d'/' -f 2
argocd login --insecure localhost:8080


# Retrieve Chart from the repository
git clone https://github.com/containous/traefik-helm-chart
helm init
helm install ./traefik-helm-chart


helm repo add incubator https://kubernetes-charts-incubator.storage.googleapis.com/
helm install --name my-release incubator/gogs

git clone https://github.com/naveenkumarsp/gitops-k8sbootstrap

printf $(kubectl get secret jenkins -o jsonpath="{.data.jenkins-admin-password}" | base64 --decode);echo

kubectl create namespace argo-rollouts
kubectl apply -n argo-rollouts -f https://raw.githubusercontent.com/argoproj/argo-rollouts/stable/manifests/install.yaml


curl -L https://istio.io/downloadIstio | sh -
cd istio-1.4.3
export PATH=$PWD/bin:$PATH
    